- name: Docker install and configuration
  hosts: _development
  become: true
  tasks:
    - name: upgrade all packages
      ansible.builtin.yum: 
        name: '*'
        state: latest
    # we may need to uninstall any existing docker files from the centos repo first. 
    - name: Remove docker if installed from CentOS repo
      ansible.builtin.yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: removed

  # yum-utils is a collection of tools and programs for managing yum repositories, installing debug packages, source packages, extended information from repositories and administration.
    - name: Install yum utils
      ansible.builtin.yum:
        name: "yum-utils"
        state: latest

  # set up the repository (`yum_repository` modul can be used.)
    - name: Add Docker repo
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker
      ansible.builtin.package:
        name: docker-ce
        state: latest

    - name: Add user ec2-user to docker group
      ansible.builtin.user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

---

- name: configure postgresql
  hosts: _ansible_postgresql
  become: true
  vars_files:
    - secret.yaml
  tasks:
   
    - name: copy files to the postgresql node
      ansible.builtin.copy:
        src: /home/ec2-user/ansible/ansible-project/postgres/
        dest: /home/ec2-user/postgresql
    
    - name: remove cw_postgre container
      community.docker.docker_container:
        name: cw_postgre
        state: absent
        force_kill: true #bu calisan kontaier silmek icin calisani sil dersen hata verir normalde --force islemi icin yani

    - name: remove clarusway/postgre image
      community.docker.docker_image:
        name: clarusway/postgre
        state: absent
    
    - name: build container image
      community.docker.docker_image:
        name: clarusway/postgre
        build:
          path: /home/ec2-user/postgresql #bu docker build deki . nin gorevi
        source: build
        state: present
      register: image_info #buda debug da kullanmak icin rasgele bir isim veriyoruz registery ye sonraki islemde buna bakicaz olmusmu diye yani docker image ls islemi yapicaz

    - name: print to image latest
      ansible.builtin.debug:
        var: image_info

    - name: launch postgresql docker container
      community.docker.docker_container:
        name: cw_postgre
        image: clarusway/postgre
        state: started
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: "{{ password }}"
        volumes:
          - /db-data:/var/lib/postgresql/data
      register: container_info

    - name: print the container image_info
      ansible.builtin.debug:
        var: container_info
          
---

- name: nodejs image install and run
  hosts: _ansible_nodejs
  become: true
  tasks:

    - name: copy files to the nodejs node
      ansible.builtin.copy:
        src: /home/ec2-user/ansible/ansible-project/nodejs/
        dest: /home/ec2-user/nodejs

  # Remove the container if it exists
    - name: remove cw_nodejs container
      community.docker.docker_container:
        name: cw_nodejs
        state: absent
        force_kill: true

  # Remove the image if it exists
    - name: remove clarusway/nodejs image
      community.docker.docker_image:
        name: clarusway/nodejs
        state: absent

    - name: build container image
      community.docker.docker_image:
        name: clarusway/nodejs
        build:
          path: /home/ec2-user/nodejs
        source: build
        state: present
      register: image_info

    - name: print the image info
      ansible.builtin.debug:
        var: image_info

    - name: Launch nodejs docker container
      community.docker.docker_container:
        name: cw_nodejs
        image: clarusway/nodejs
        state: started
        ports: 
        - "5000:5000"
      register: container_info
    
    - name: print the container info
      ansible.builtin.debug:
        var: container_info

---
- name: configure react instance
  hosts: _ansible_react
  become: true
  tasks:
    
  # at this point do not forget change REACT_APP_BASE_URL env variable for nodejs node
    - name: copy files to the react node
      copy:
        src: /home/ec2-user/ansible/ansible-project/react/
        dest: /home/ec2-user/react

    - name: remove cw_react container
      community.docker.docker_container:
        name: cw_react
        state: absent
        force_kill: true

    - name: remove clarusway/react image
      community.docker.docker_image:
        name: clarusway/react
        state: absent
  
    - name: build container image
      community.docker.docker_image:
        name: clarusway/react
        build:
          path: /home/ec2-user/react
        source: build
        state: present

    - name: Launch postgresql docker container
      community.docker.docker_container:
        name: cw_react
        image: clarusway/react
        state: started
        ports: 
        - "3000:3000"
      register: container_info
    
    - name: print the container info
      ansible.builtin.debug:
        var: container_info
